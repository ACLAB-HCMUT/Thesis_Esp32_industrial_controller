// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.5.0
// LVGL version: 8.3.11
// Project name: ui

#include "ui.h"
#include "../src/device/TaskMobus.h"

void screen1relay1(bool state)
{
	static lv_style_t style_panel;
	lv_style_init(&style_panel);
	lv_style_set_bg_color(&style_panel, lv_color_hex(state ? 0x4AB569 : 0xFFFFFF));
	lv_style_set_bg_opa(&style_panel, LV_OPA_COVER);
	lv_obj_add_style(ui_Panel29, &style_panel, LV_PART_MAIN);
}

void screen1relay2(bool state)
{
	static lv_style_t style_panel;
	lv_style_init(&style_panel);
	lv_style_set_bg_color(&style_panel, lv_color_hex(state ? 0x4AB569 : 0xFFFFFF));
	lv_style_set_bg_opa(&style_panel, LV_OPA_COVER);
	lv_obj_add_style(ui_Panel30, &style_panel, LV_PART_MAIN);
}

void screen1relay3(bool state)
{
	static lv_style_t style_panel;
	lv_style_init(&style_panel);
	lv_style_set_bg_color(&style_panel, lv_color_hex(state ? 0x4AB569 : 0xFFFFFF));
	lv_style_set_bg_opa(&style_panel, LV_OPA_COVER);
	lv_obj_add_style(ui_Panel31, &style_panel, LV_PART_MAIN);
}

void screen1relay4(bool state)
{
	static lv_style_t style_panel;
	lv_style_init(&style_panel);
	lv_style_set_bg_color(&style_panel, lv_color_hex(state ? 0x4AB569 : 0xFFFFFF));
	lv_style_set_bg_opa(&style_panel, LV_OPA_COVER);
	lv_obj_add_style(ui_Panel32, &style_panel, LV_PART_MAIN);
}

void screen1relay5(bool state)
{
	static lv_style_t style_panel;
	lv_style_init(&style_panel);
	lv_style_set_bg_color(&style_panel, lv_color_hex(state ? 0x4AB569 : 0xFFFFFF));
	lv_style_set_bg_opa(&style_panel, LV_OPA_COVER);
	lv_obj_add_style(ui_Panel33, &style_panel, LV_PART_MAIN);
}

void screen1relay6(bool state)
{
	static lv_style_t style_panel;
	lv_style_init(&style_panel);
	lv_style_set_bg_color(&style_panel, lv_color_hex(state ? 0x4AB569 : 0xFFFFFF));
	lv_style_set_bg_opa(&style_panel, LV_OPA_COVER);
	lv_obj_add_style(ui_Panel34, &style_panel, LV_PART_MAIN);
}

void screen2relay1(lv_event_t *e)
{
	// Your code here
	lv_event_code_t code = lv_event_get_code(e);
	lv_obj_t *obj = lv_event_get_target(e);
	if (code == LV_EVENT_VALUE_CHANGED)
	{
		LV_UNUSED(obj);
		stateRS485(0, lv_obj_has_state(obj, LV_STATE_CHECKED));
		screen1relay1(lv_obj_has_state(obj, LV_STATE_CHECKED));
	}
}

void screen2relay2(lv_event_t *e)
{
	// Your code here
	lv_event_code_t code = lv_event_get_code(e);
	lv_obj_t *obj = lv_event_get_target(e);
	if (code == LV_EVENT_VALUE_CHANGED)
	{
		LV_UNUSED(obj);
		stateRS485(1, lv_obj_has_state(obj, LV_STATE_CHECKED));
		screen1relay2(lv_obj_has_state(obj, LV_STATE_CHECKED));
	}
}

void screen2relay3(lv_event_t *e)
{
	// Your code here
	lv_event_code_t code = lv_event_get_code(e);
	lv_obj_t *obj = lv_event_get_target(e);
	if (code == LV_EVENT_VALUE_CHANGED)
	{
		LV_UNUSED(obj);
		stateRS485(2, lv_obj_has_state(obj, LV_STATE_CHECKED));
		screen1relay3(lv_obj_has_state(obj, LV_STATE_CHECKED));
	}
}

void screen2relay4(lv_event_t *e)
{
	// Your code here
	lv_event_code_t code = lv_event_get_code(e);
	lv_obj_t *obj = lv_event_get_target(e);
	if (code == LV_EVENT_VALUE_CHANGED)
	{
		LV_UNUSED(obj);
		stateRS485(3, lv_obj_has_state(obj, LV_STATE_CHECKED));
		screen1relay4(lv_obj_has_state(obj, LV_STATE_CHECKED));
	}
}

void screen2relay5(lv_event_t *e)
{
	// Your code here
	lv_event_code_t code = lv_event_get_code(e);
	lv_obj_t *obj = lv_event_get_target(e);
	if (code == LV_EVENT_VALUE_CHANGED)
	{
		LV_UNUSED(obj);
		stateRS485(4, lv_obj_has_state(obj, LV_STATE_CHECKED));
		screen1relay5(lv_obj_has_state(obj, LV_STATE_CHECKED));
	}
}

void screen2relay6(lv_event_t *e)
{
	// Your code here
	lv_event_code_t code = lv_event_get_code(e);
	lv_obj_t *obj = lv_event_get_target(e);
	if (code == LV_EVENT_VALUE_CHANGED)
	{
		LV_UNUSED(obj);
		stateRS485(5, lv_obj_has_state(obj, LV_STATE_CHECKED));
		screen1relay6(lv_obj_has_state(obj, LV_STATE_CHECKED));
	}
}
